"use strict";(self.webpackChunkreact_frontend=self.webpackChunkreact_frontend||[]).push([[617,844],{3844:(e,a,s)=>{s.r(a),s.d(a,{GlobalVariable:()=>o,address_code:()=>l,address_gui:()=>t,websocket_address:()=>r});var r="127.0.0.1",l="ws://"+r+":1905",t="ws://"+r+":2303",o={simStop:"simStop",sendCode:"sendCode",running:"running",firstAttempt:"firstAttempt",simReset:"simReset",simResume:"simResume",resetRequested:"resetRequested",firstCodeSent:"firstCodeSent",swapping:"swapping",gazeboOn:"gazeboOn",gazeboToggle:"gazeboToggle",teleOpMode:"teleOpMode"}},4617:(e,a,s)=>{s.r(a),s.d(a,{animation_id:()=>{},brainFreqAck:()=>l,command_input:()=>{},content:()=>{},firstAttempt:()=>n,firstCodeSent:()=>g,gazeboOn:()=>m,gazeboToggle:()=>V,getValue:()=>k,guiFreqAck:()=>t,image_data:()=>{},lap_time:()=>{},pose:()=>{},resetRequested:()=>u,running:()=>i,sendCode:()=>b,setValue:()=>f,shape:()=>{},simReset:()=>c,simResume:()=>d,simStop:()=>o,source:()=>{},swapping:()=>p,teleOpMode:()=>G,v:()=>R,w:()=>w});var r=s(3844),l=12,t=12,o=!1,b=!1,i=!0,n=!0,c=!1,d=!1,u=!1,g=!1,p=!1,m=!1,V=!1,G=!1;function k(e){switch(e){case r.GlobalVariable.simStop:return o;case r.GlobalVariable.running:return i;case r.GlobalVariable.sendCode:return b;case r.GlobalVariable.firstAttempt:return n;case r.GlobalVariable.simReset:return c;case r.GlobalVariable.simResume:return d;case r.GlobalVariable.resetRequested:return u;case r.GlobalVariable.firstCodeSent:return g;case r.GlobalVariable.swapping:return p;case r.GlobalVariable.gazeboOn:return m;case r.GlobalVariable.gazeboToggle:return V;case r.GlobalVariable.teleOpMode:return G;default:console.log(e),console.error("Unassigned Value")}}function f(e,a){switch(e){case r.GlobalVariable.simStop:o=a;break;case r.GlobalVariable.running:i=a;break;case r.GlobalVariable.sendCode:b=a;break;case r.GlobalVariable.firstAttempt:n=a;break;case r.GlobalVariable.simReset:c=a;break;case r.GlobalVariable.simResume:d=a;break;case r.GlobalVariable.resetRequested:u=a;break;case r.GlobalVariable.firstCodeSent:g=a;break;case r.GlobalVariable.swapping:p=a;break;case r.GlobalVariable.gazeboOn:m=a;break;case r.GlobalVariable.gazeboToggle:V=a;break;case r.GlobalVariable.teleOpMode:G=a;break;default:console.log(e)}}var R=0,w=0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianMvNjE3LmU0NjYzOWIwLmpzIiwibWFwcGluZ3MiOiJxTkFBQSxJQUFNQSxFQUFvQixZQUNwQkMsRUFBZSxRQUFVRCxFQUFvQixRQUM3Q0UsRUFBYyxRQUFVRixFQUFvQixRQUU1Q0csRUFBaUIsQ0FDckJDLFFBQVMsVUFDVEMsU0FBVSxXQUNWQyxRQUFTLFVBQ1RDLGFBQWMsZUFDZEMsU0FBVSxXQUNWQyxVQUFXLFlBQ1hDLGVBQWdCLGlCQUNoQkMsY0FBZSxnQkFDZkMsU0FBVSxXQUNWQyxTQUFVLFdBQ1ZDLGFBQWMsZUFDZEMsV0FBWSxhLDBjQ2ZWQyxFQUFlLEdBQ2pCQyxFQUFhLEdBQ1hiLEdBQVUsRUFDWkMsR0FBVyxFQUNYQyxHQUFVLEVBQ1ZDLEdBQWUsRUFDZkMsR0FBVyxFQUNYQyxHQUFZLEVBQ1pDLEdBQWlCLEVBQ2pCQyxHQUFnQixFQUNoQkMsR0FBVyxFQUNYQyxHQUFXLEVBQ1hDLEdBQWUsRUFDZkMsR0FBYSxFQVVmLFNBQVNHLEVBQVNDLEdBQ2hCLE9BQVFBLEdBQ04sS0FBS2hCLEVBQUFBLGVBQUFBLFFBQ0gsT0FBT0MsRUFDVCxLQUFLRCxFQUFBQSxlQUFBQSxRQUNILE9BQU9HLEVBQ1QsS0FBS0gsRUFBQUEsZUFBQUEsU0FDSCxPQUFPRSxFQUNULEtBQUtGLEVBQUFBLGVBQUFBLGFBQ0gsT0FBT0ksRUFDVCxLQUFLSixFQUFBQSxlQUFBQSxTQUNILE9BQU9LLEVBQ1QsS0FBS0wsRUFBQUEsZUFBQUEsVUFDSCxPQUFPTSxFQUNULEtBQUtOLEVBQUFBLGVBQUFBLGVBQ0gsT0FBT08sRUFDVCxLQUFLUCxFQUFBQSxlQUFBQSxjQUNILE9BQU9RLEVBQ1QsS0FBS1IsRUFBQUEsZUFBQUEsU0FDSCxPQUFPUyxFQUNULEtBQUtULEVBQUFBLGVBQUFBLFNBQ0gsT0FBT1UsRUFDVCxLQUFLVixFQUFBQSxlQUFBQSxhQUNILE9BQU9XLEVBQ1QsS0FBS1gsRUFBQUEsZUFBQUEsV0FDSCxPQUFPWSxFQUNULFFBQ0VLLFFBQVFDLElBQUlGLEdBQ1pDLFFBQVFFLE1BQU0sb0JBRXBCLENBRUEsU0FBU0MsRUFBU0osRUFBR0ssR0FDbkIsT0FBUUwsR0FDTixLQUFLaEIsRUFBQUEsZUFBQUEsUUFDSEMsRUFBVW9CLEVBQ1YsTUFDRixLQUFLckIsRUFBQUEsZUFBQUEsUUFDSEcsRUFBVWtCLEVBQ1YsTUFDRixLQUFLckIsRUFBQUEsZUFBQUEsU0FDSEUsRUFBV21CLEVBQ1gsTUFDRixLQUFLckIsRUFBQUEsZUFBQUEsYUFDSEksRUFBZWlCLEVBQ2YsTUFDRixLQUFLckIsRUFBQUEsZUFBQUEsU0FDSEssRUFBV2dCLEVBQ1gsTUFDRixLQUFLckIsRUFBQUEsZUFBQUEsVUFDSE0sRUFBWWUsRUFDWixNQUNGLEtBQUtyQixFQUFBQSxlQUFBQSxlQUNITyxFQUFpQmMsRUFDakIsTUFDRixLQUFLckIsRUFBQUEsZUFBQUEsY0FDSFEsRUFBZ0JhLEVBQ2hCLE1BQ0YsS0FBS3JCLEVBQUFBLGVBQUFBLFNBQ0hTLEVBQVdZLEVBQ1gsTUFDRixLQUFLckIsRUFBQUEsZUFBQUEsU0FDSFUsRUFBV1csRUFDWCxNQUNGLEtBQUtyQixFQUFBQSxlQUFBQSxhQUNIVyxFQUFlVSxFQUNmLE1BQ0YsS0FBS3JCLEVBQUFBLGVBQUFBLFdBQ0hZLEVBQWFTLEVBQ2IsTUFDRixRQUNFSixRQUFRQyxJQUFJRixHQUVsQixDQUVBLElBQUlNLEVBQUksRUFDSkMsRUFBSSxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3RfZnJvbnRlbmQvLi9zcmMvY29uc3RhbnRzL2luZGV4LmpzIiwid2VicGFjazovL3JlYWN0X2Zyb250ZW5kLy4vc3JjL2hlbHBlcnMvZ2xvYmFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHdlYnNvY2tldF9hZGRyZXNzID0gXCIxMjcuMC4wLjFcIjtcbmNvbnN0IGFkZHJlc3NfY29kZSA9IFwid3M6Ly9cIiArIHdlYnNvY2tldF9hZGRyZXNzICsgXCI6MTkwNVwiO1xuY29uc3QgYWRkcmVzc19ndWkgPSBcIndzOi8vXCIgKyB3ZWJzb2NrZXRfYWRkcmVzcyArIFwiOjIzMDNcIjtcblxuY29uc3QgR2xvYmFsVmFyaWFibGUgPSB7XG4gIHNpbVN0b3A6IFwic2ltU3RvcFwiLFxuICBzZW5kQ29kZTogXCJzZW5kQ29kZVwiLFxuICBydW5uaW5nOiBcInJ1bm5pbmdcIixcbiAgZmlyc3RBdHRlbXB0OiBcImZpcnN0QXR0ZW1wdFwiLFxuICBzaW1SZXNldDogXCJzaW1SZXNldFwiLFxuICBzaW1SZXN1bWU6IFwic2ltUmVzdW1lXCIsXG4gIHJlc2V0UmVxdWVzdGVkOiBcInJlc2V0UmVxdWVzdGVkXCIsXG4gIGZpcnN0Q29kZVNlbnQ6IFwiZmlyc3RDb2RlU2VudFwiLFxuICBzd2FwcGluZzogXCJzd2FwcGluZ1wiLFxuICBnYXplYm9PbjogXCJnYXplYm9PblwiLFxuICBnYXplYm9Ub2dnbGU6IFwiZ2F6ZWJvVG9nZ2xlXCIsXG4gIHRlbGVPcE1vZGU6IFwidGVsZU9wTW9kZVwiLFxufTtcbmV4cG9ydCB7IHdlYnNvY2tldF9hZGRyZXNzLCBhZGRyZXNzX2NvZGUsIGFkZHJlc3NfZ3VpLCBHbG9iYWxWYXJpYWJsZSB9O1xuIiwiaW1wb3J0IHsgR2xvYmFsVmFyaWFibGUgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5sZXQgYnJhaW5GcmVxQWNrID0gMTIsXG4gIGd1aUZyZXFBY2sgPSAxMjtcbmxldCBzaW1TdG9wID0gZmFsc2UsXG4gIHNlbmRDb2RlID0gZmFsc2UsXG4gIHJ1bm5pbmcgPSB0cnVlLFxuICBmaXJzdEF0dGVtcHQgPSB0cnVlLFxuICBzaW1SZXNldCA9IGZhbHNlLFxuICBzaW1SZXN1bWUgPSBmYWxzZSxcbiAgcmVzZXRSZXF1ZXN0ZWQgPSBmYWxzZSxcbiAgZmlyc3RDb2RlU2VudCA9IGZhbHNlLFxuICBzd2FwcGluZyA9IGZhbHNlLFxuICBnYXplYm9PbiA9IGZhbHNlLFxuICBnYXplYm9Ub2dnbGUgPSBmYWxzZSxcbiAgdGVsZU9wTW9kZSA9IGZhbHNlO1xubGV0IGFuaW1hdGlvbl9pZCxcbiAgaW1hZ2VfZGF0YSxcbiAgc291cmNlLFxuICBzaGFwZSxcbiAgbGFwX3RpbWUsXG4gIHBvc2UsXG4gIGNvbnRlbnQsXG4gIGNvbW1hbmRfaW5wdXQ7XG5cbmZ1bmN0aW9uIGdldFZhbHVlKHgpIHtcbiAgc3dpdGNoICh4KSB7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5zaW1TdG9wOlxuICAgICAgcmV0dXJuIHNpbVN0b3A7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5ydW5uaW5nOlxuICAgICAgcmV0dXJuIHJ1bm5pbmc7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5zZW5kQ29kZTpcbiAgICAgIHJldHVybiBzZW5kQ29kZTtcbiAgICBjYXNlIEdsb2JhbFZhcmlhYmxlLmZpcnN0QXR0ZW1wdDpcbiAgICAgIHJldHVybiBmaXJzdEF0dGVtcHQ7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5zaW1SZXNldDpcbiAgICAgIHJldHVybiBzaW1SZXNldDtcbiAgICBjYXNlIEdsb2JhbFZhcmlhYmxlLnNpbVJlc3VtZTpcbiAgICAgIHJldHVybiBzaW1SZXN1bWU7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5yZXNldFJlcXVlc3RlZDpcbiAgICAgIHJldHVybiByZXNldFJlcXVlc3RlZDtcbiAgICBjYXNlIEdsb2JhbFZhcmlhYmxlLmZpcnN0Q29kZVNlbnQ6XG4gICAgICByZXR1cm4gZmlyc3RDb2RlU2VudDtcbiAgICBjYXNlIEdsb2JhbFZhcmlhYmxlLnN3YXBwaW5nOlxuICAgICAgcmV0dXJuIHN3YXBwaW5nO1xuICAgIGNhc2UgR2xvYmFsVmFyaWFibGUuZ2F6ZWJvT246XG4gICAgICByZXR1cm4gZ2F6ZWJvT247XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5nYXplYm9Ub2dnbGU6XG4gICAgICByZXR1cm4gZ2F6ZWJvVG9nZ2xlO1xuICAgIGNhc2UgR2xvYmFsVmFyaWFibGUudGVsZU9wTW9kZTpcbiAgICAgIHJldHVybiB0ZWxlT3BNb2RlO1xuICAgIGRlZmF1bHQ6XG4gICAgICBjb25zb2xlLmxvZyh4KTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJVbmFzc2lnbmVkIFZhbHVlXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHNldFZhbHVlKHgsIHZhbCkge1xuICBzd2l0Y2ggKHgpIHtcbiAgICBjYXNlIEdsb2JhbFZhcmlhYmxlLnNpbVN0b3A6XG4gICAgICBzaW1TdG9wID0gdmFsO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5ydW5uaW5nOlxuICAgICAgcnVubmluZyA9IHZhbDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgR2xvYmFsVmFyaWFibGUuc2VuZENvZGU6XG4gICAgICBzZW5kQ29kZSA9IHZhbDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgR2xvYmFsVmFyaWFibGUuZmlyc3RBdHRlbXB0OlxuICAgICAgZmlyc3RBdHRlbXB0ID0gdmFsO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5zaW1SZXNldDpcbiAgICAgIHNpbVJlc2V0ID0gdmFsO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5zaW1SZXN1bWU6XG4gICAgICBzaW1SZXN1bWUgPSB2YWw7XG4gICAgICBicmVhaztcbiAgICBjYXNlIEdsb2JhbFZhcmlhYmxlLnJlc2V0UmVxdWVzdGVkOlxuICAgICAgcmVzZXRSZXF1ZXN0ZWQgPSB2YWw7XG4gICAgICBicmVhaztcbiAgICBjYXNlIEdsb2JhbFZhcmlhYmxlLmZpcnN0Q29kZVNlbnQ6XG4gICAgICBmaXJzdENvZGVTZW50ID0gdmFsO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5zd2FwcGluZzpcbiAgICAgIHN3YXBwaW5nID0gdmFsO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5nYXplYm9PbjpcbiAgICAgIGdhemVib09uID0gdmFsO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBHbG9iYWxWYXJpYWJsZS5nYXplYm9Ub2dnbGU6XG4gICAgICBnYXplYm9Ub2dnbGUgPSB2YWw7XG4gICAgICBicmVhaztcbiAgICBjYXNlIEdsb2JhbFZhcmlhYmxlLnRlbGVPcE1vZGU6XG4gICAgICB0ZWxlT3BNb2RlID0gdmFsO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnNvbGUubG9nKHgpO1xuICB9XG59XG4vLyBDYXIgdmFyaWFibGVzXG5sZXQgdiA9IDA7XG5sZXQgdyA9IDA7XG5cbmV4cG9ydCB7XG4gIGJyYWluRnJlcUFjayxcbiAgZ3VpRnJlcUFjayxcbiAgc2ltU3RvcCxcbiAgc2VuZENvZGUsXG4gIHJ1bm5pbmcsXG4gIGZpcnN0QXR0ZW1wdCxcbiAgc2ltUmVzZXQsXG4gIHNpbVJlc3VtZSxcbiAgcmVzZXRSZXF1ZXN0ZWQsXG4gIGZpcnN0Q29kZVNlbnQsXG4gIHN3YXBwaW5nLFxuICBnYXplYm9PbixcbiAgZ2F6ZWJvVG9nZ2xlLFxuICB0ZWxlT3BNb2RlLFxuICBhbmltYXRpb25faWQsXG4gIGltYWdlX2RhdGEsXG4gIHNvdXJjZSxcbiAgc2hhcGUsXG4gIGxhcF90aW1lLFxuICBwb3NlLFxuICBjb250ZW50LFxuICBjb21tYW5kX2lucHV0LFxuICB2LFxuICB3LFxuICBzZXRWYWx1ZSxcbiAgZ2V0VmFsdWUsXG59O1xuIl0sIm5hbWVzIjpbIndlYnNvY2tldF9hZGRyZXNzIiwiYWRkcmVzc19jb2RlIiwiYWRkcmVzc19ndWkiLCJHbG9iYWxWYXJpYWJsZSIsInNpbVN0b3AiLCJzZW5kQ29kZSIsInJ1bm5pbmciLCJmaXJzdEF0dGVtcHQiLCJzaW1SZXNldCIsInNpbVJlc3VtZSIsInJlc2V0UmVxdWVzdGVkIiwiZmlyc3RDb2RlU2VudCIsInN3YXBwaW5nIiwiZ2F6ZWJvT24iLCJnYXplYm9Ub2dnbGUiLCJ0ZWxlT3BNb2RlIiwiYnJhaW5GcmVxQWNrIiwiZ3VpRnJlcUFjayIsImdldFZhbHVlIiwieCIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsInNldFZhbHVlIiwidmFsIiwidiIsInciXSwic291cmNlUm9vdCI6IiJ9