/*! For license information please see 605.1f6453a3.js.LICENSE.txt */
(self.webpackChunkreact_frontend=self.webpackChunkreact_frontend||[]).push([[605],{8605:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>l});var r=n(7294),o=n(4184),a=n.n(o),s=n(5893);function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a=[],s=!0,c=!1;try{for(n=n.call(e);!(s=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);s=!0);}catch(e){c=!0,o=e}finally{try{s||null==n.return||n.return()}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?i(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const l=function(e){var t=c(r.useState(null),2),n=t[0],o=t[1],i=c(r.useState(""),2),l=i[0],u=i[1],f=a()({"test-show-screen":!0});return r.useEffect((function(){console.log("TestShowScreen subscribing to ['update'] events"),o("https://via.placeholder.com/800x600.png?text=No%20image%20received%20from%20exercise");var e=function(e){var t=e.data.update;if(t.image){var n=JSON.parse(t.image);o("data:image/png;base64,".concat(n.image))}else o("https://via.placeholder.com/800x600.png?text=No%20image%20received%20from%20exercise")};return RoboticsExerciseComponents.commsManager.subscribe([RoboticsExerciseComponents.commsManager.events.UPDATE],e),function(){console.log("TestShowScreen unsubscribing from ['state-changed'] events"),RoboticsExerciseComponents.commsManager.unsubscribe([RoboticsExerciseComponents.commsManager.events.UPDATE],e)}}),[]),(0,s.jsxs)("div",{className:"panel-parent",children:[(0,s.jsxs)("div",{className:"panel",children:[(0,s.jsx)("textarea",{value:l,onChange:function(e){u(e.target.value)},cols:80}),(0,s.jsx)("div",{className:f,onClick:function(e){RoboticsExerciseComponents.commsManager.send("load",{code:l}).then((function(e){console.log("code loaded")})).catch((function(e){console.error(e)}))},children:"Load code"})]}),(0,s.jsx)("div",{className:"panel",children:(0,s.jsx)("img",{src:n,alt:"Exercise screen",className:f})})]})}},4184:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if("string"===a||"number"===a)e.push(n);else if(Array.isArray(n)){if(n.length){var s=o.apply(null,n);s&&e.push(s)}}else if("object"===a){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var c in n)r.call(n,c)&&n[c]&&e.push(c)}}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(n=function(){return o}.apply(t,[]))||(e.exports=n)}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,