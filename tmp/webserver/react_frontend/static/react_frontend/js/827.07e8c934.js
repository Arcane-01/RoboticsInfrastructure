/*! For license information please see 827.07e8c934.js.LICENSE.txt */
(self.webpackChunkreact_frontend=self.webpackChunkreact_frontend||[]).push([[827],{3827:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>c});var n=r(7294),o=r(4184),s=r.n(o),a=r(5893);function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}const c=function(){var e,t,r=(e=n.useState("Idle"),t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,s=[],a=!0,i=!1;try{for(r=r.call(e);!(a=(n=r.next()).done)&&(s.push(n.value),!t||s.length!==t);a=!0);}catch(e){i=!0,o=e}finally{try{a||null==r.return||r.return()}finally{if(i)throw o}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],c=r[1],u=s()({"test-exercise-manager-state":!0});return n.useEffect((function(){console.log("Test3ExerciseManager subscribing to ['state-change'] events");var e=function(e){c(e.data.state),console.log(e)};return RoboticsExerciseComponents.commsManager.subscribe([RoboticsExerciseComponents.commsManager.events.STATE_CHANGED],e),function(){console.log("Test2ExerciseManager unsubscribing from ['state-changed'] events"),RoboticsExerciseComponents.commsManager.unsubscribe([RoboticsExerciseComponents.commsManager.events.STATE_CHANGED],e)}}),[]),(0,a.jsxs)(n.Fragment,{children:[(0,a.jsx)("hr",{}),(0,a.jsxs)("div",{className:u,children:["CURRENT STATE: ",o]})]})}},4184:(e,t)=>{var r;!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var s=typeof r;if("string"===s||"number"===s)e.push(r);else if(Array.isArray(r)){if(r.length){var a=o.apply(null,r);a&&e.push(a)}}else if("object"===s){if(r.toString!==Object.prototype.toString&&!r.toString.toString().includes("[native code]")){e.push(r.toString());continue}for(var i in r)n.call(r,i)&&r[i]&&e.push(i)}}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianMvODI3LjEzODQyMDc1LmpzIiwibWFwcGluZ3MiOiI7a1NBMkNBLFFBckM2QixXQUMzQixRQUFnRCxLQUF0QkEsRUFBQUEsU0FBZSxVQUFPLGcwQkFBekNDLEVBQUssS0FBRUMsRUFBUSxLQUVoQkMsRUFBVUMsSUFBVyxDQUN6QiwrQkFBK0IsSUF5QmpDLE9BdEJBSixFQUFBQSxXQUFnQixXQUNkSyxRQUFRQyxJQUFJLCtEQUVaLElBQU1DLEVBQVcsU0FBQ0MsR0FDWk4sRUFBU00sRUFBUUMsS0FBS1IsT0FDdEJJLFFBQVFDLElBQUlFLEVBQ2xCLEVBT0EsT0FMQUUsMkJBQTJCQyxhQUFhQyxVQUFVLENBQzVDRiwyQkFBMkJDLGFBQWFFLE9BQU9DLGVBRWpEUCxHQUVHLFdBQ0xGLFFBQVFDLElBQUksb0VBQ1pJLDJCQUEyQkMsYUFBYUksWUFBWSxDQUM5Q0wsMkJBQTJCQyxhQUFhRSxPQUFPQyxlQUVuRFAsRUFDSixDQUNGLEdBQUcsS0FHRCxVQUFDLEVBQUFTLFNBQVEsWUFDTCxtQkFDQSxpQkFBS0MsVUFBV2QsRUFBUSxVQUFDLGtCQUFnQkYsT0FHakQsZ0JDekNBLE9BT0MsV0FDQSxhQUVBLElBQUlpQixFQUFTLENBQUMsRUFBRUMsZUFHaEIsU0FBU2YsSUFHUixJQUZBLElBQUlELEVBQVUsR0FFTGlCLEVBQUksRUFBR0EsRUFBSUMsVUFBVUMsT0FBUUYsSUFBSyxDQUMxQyxJQUFJRyxFQUFNRixVQUFVRCxHQUNwQixHQUFLRyxFQUFMLENBRUEsSUFBSUMsU0FBaUJELEVBRXJCLEdBQWdCLFdBQVpDLEdBQW9DLFdBQVpBLEVBQzNCckIsRUFBUXNCLEtBQUtGLFFBQ1AsR0FBSUcsTUFBTUMsUUFBUUosSUFDeEIsR0FBSUEsRUFBSUQsT0FBUSxDQUNmLElBQUlNLEVBQVF4QixFQUFXeUIsTUFBTSxLQUFNTixHQUMvQkssR0FDSHpCLEVBQVFzQixLQUFLRyxFQUVmLE9BQ00sR0FBZ0IsV0FBWkosRUFBc0IsQ0FDaEMsR0FBSUQsRUFBSU8sV0FBYUMsT0FBT0MsVUFBVUYsV0FBYVAsRUFBSU8sU0FBU0EsV0FBV0csU0FBUyxpQkFBa0IsQ0FDckc5QixFQUFRc0IsS0FBS0YsRUFBSU8sWUFDakIsUUFDRCxDQUVBLElBQUssSUFBSUksS0FBT1gsRUFDWEwsRUFBT2lCLEtBQUtaLEVBQUtXLElBQVFYLEVBQUlXLElBQ2hDL0IsRUFBUXNCLEtBQUtTLEVBR2hCLENBeEJrQixDQXlCbkIsQ0FFQSxPQUFPL0IsRUFBUWlDLEtBQUssSUFDckIsQ0FFcUNDLEVBQU9DLFNBQzNDbEMsRUFBV21DLFFBQVVuQyxFQUNyQmlDLEVBQU9DLFFBQVVsQyxRQUtoQixLQUZ3QixFQUFGLFdBQ3RCLE9BQU9BLENBQ1AsVUFGb0IsT0FFcEIsWUFJSCxDQXBEQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0X2Zyb250ZW5kLy4uL2V4ZXJjaXNlcy9zdGF0aWMvZXhlcmNpc2VzL2ZvbGxvd19saW5lX25ld21hbmFnZXIvd2ViLXRlbXBsYXRlL3JlYWN0LWNvbXBvbmVudHMvVGVzdDNFeGVyY2lzZU1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vcmVhY3RfZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcblxuaW1wb3J0ICcuL2Nzcy9UZXN0RXhlcmNpc2VNYW5hZ2VyMy5jc3MnO1xuaW1wb3J0IHtGcmFnbWVudH0gZnJvbSBcInJlYWN0XCI7XG5cbmNvbnN0IFRlc3QzRXhlcmNpc2VNYW5hZ2VyID0gKCkgPT4ge1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKFwiSWRsZVwiKTtcblxuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyh7XG4gICAgXCJ0ZXN0LWV4ZXJjaXNlLW1hbmFnZXItc3RhdGVcIjogdHJ1ZSxcbiAgfSk7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIlRlc3QzRXhlcmNpc2VNYW5hZ2VyIHN1YnNjcmliaW5nIHRvIFsnc3RhdGUtY2hhbmdlJ10gZXZlbnRzXCIpO1xuXG4gICAgY29uc3QgY2FsbGJhY2sgPSAobWVzc2FnZSkgPT4ge1xuICAgICAgICAgIHNldFN0YXRlKG1lc3NhZ2UuZGF0YS5zdGF0ZSk7XG4gICAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XG4gICAgfTtcblxuICAgIFJvYm90aWNzRXhlcmNpc2VDb21wb25lbnRzLmNvbW1zTWFuYWdlci5zdWJzY3JpYmUoW1xuICAgICAgICAgIFJvYm90aWNzRXhlcmNpc2VDb21wb25lbnRzLmNvbW1zTWFuYWdlci5ldmVudHMuU1RBVEVfQ0hBTkdFRFxuICAgICAgICBdLFxuICAgICAgICBjYWxsYmFjayk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coXCJUZXN0MkV4ZXJjaXNlTWFuYWdlciB1bnN1YnNjcmliaW5nIGZyb20gWydzdGF0ZS1jaGFuZ2VkJ10gZXZlbnRzXCIpO1xuICAgICAgUm9ib3RpY3NFeGVyY2lzZUNvbXBvbmVudHMuY29tbXNNYW5hZ2VyLnVuc3Vic2NyaWJlKFtcbiAgICAgICAgICAgIFJvYm90aWNzRXhlcmNpc2VDb21wb25lbnRzLmNvbW1zTWFuYWdlci5ldmVudHMuU1RBVEVfQ0hBTkdFRFxuICAgICAgICAgIF0sXG4gICAgICAgIGNhbGxiYWNrKTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgICAgPGhyIC8+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzfT5DVVJSRU5UIFNUQVRFOiB7c3RhdGV9PC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUZXN0M0V4ZXJjaXNlTWFuYWdlcjsiLCIvKiFcblx0Q29weXJpZ2h0IChjKSAyMDE4IEplZCBXYXRzb24uXG5cdExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgc2VlXG5cdGh0dHA6Ly9qZWR3YXRzb24uZ2l0aHViLmlvL2NsYXNzbmFtZXNcbiovXG4vKiBnbG9iYWwgZGVmaW5lICovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgaGFzT3duID0ge30uaGFzT3duUHJvcGVydHk7XG5cdHZhciBuYXRpdmVDb2RlU3RyaW5nID0gJ1tuYXRpdmUgY29kZV0nO1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMoKSB7XG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmIChhcmdUeXBlID09PSAnc3RyaW5nJyB8fCBhcmdUeXBlID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpKSB7XG5cdFx0XHRcdGlmIChhcmcubGVuZ3RoKSB7XG5cdFx0XHRcdFx0dmFyIGlubmVyID0gY2xhc3NOYW1lcy5hcHBseShudWxsLCBhcmcpO1xuXHRcdFx0XHRcdGlmIChpbm5lcikge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGlubmVyKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoYXJnVHlwZSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0aWYgKGFyZy50b1N0cmluZyAhPT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyAmJiAhYXJnLnRvU3RyaW5nLnRvU3RyaW5nKCkuaW5jbHVkZXMoJ1tuYXRpdmUgY29kZV0nKSkge1xuXHRcdFx0XHRcdGNsYXNzZXMucHVzaChhcmcudG9TdHJpbmcoKSk7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIl0sIm5hbWVzIjpbIlJlYWN0Iiwic3RhdGUiLCJzZXRTdGF0ZSIsImNsYXNzZXMiLCJjbGFzc05hbWVzIiwiY29uc29sZSIsImxvZyIsImNhbGxiYWNrIiwibWVzc2FnZSIsImRhdGEiLCJSb2JvdGljc0V4ZXJjaXNlQ29tcG9uZW50cyIsImNvbW1zTWFuYWdlciIsInN1YnNjcmliZSIsImV2ZW50cyIsIlNUQVRFX0NIQU5HRUQiLCJ1bnN1YnNjcmliZSIsIkZyYWdtZW50IiwiY2xhc3NOYW1lIiwiaGFzT3duIiwiaGFzT3duUHJvcGVydHkiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJnIiwiYXJnVHlwZSIsInB1c2giLCJBcnJheSIsImlzQXJyYXkiLCJpbm5lciIsImFwcGx5IiwidG9TdHJpbmciLCJPYmplY3QiLCJwcm90b3R5cGUiLCJpbmNsdWRlcyIsImtleSIsImNhbGwiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9